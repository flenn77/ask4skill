version: "3.8"

services:

  mysql:
    image: mysql:8
    container_name: ask4skill-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - asknet

  phpmyadmin:
    image: phpmyadmin
    container_name: ask4skill-phpmyadmin
    restart: always
    environment:
      PMA_HOST: ${PMA_HOST}
      PMA_USER: ${PMA_USER}
      PMA_PASSWORD: ${PMA_PASSWORD}
      PMA_ABSOLUTE_URI: ${PMA_ABSOLUTE_URI}
    depends_on:
      - mysql
    networks:
      - asknet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.localhost`)"
      - "traefik.http.routers.phpmyadmin.entrypoints=web"
      - "traefik.http.services.phpmyadmin.loadbalancer.server.port=80"

  maildev:
    image: maildev/maildev
    container_name: ask4skill-maildev
    ports:
      - "${MAILDEV_UI_PORT}:1080"
      - "${MAILDEV_PORT}:1025"
    networks:
      - asknet

  frontend:
    build: ../frontend
    container_name: ask4skill-frontend
    depends_on:
      - auth-service
    networks:
      - asknet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

  auth-service:
    build: ../backend/auth-service
    container_name: ask4skill-auth-service
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      - mysql
    networks:
      - asknet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=PathPrefix(`/api/auth`)"
      - "traefik.http.routers.auth.entrypoints=web"
      - "traefik.http.services.auth.loadbalancer.server.port=5000"

  user-service:
    build: ../backend/user-service
    container_name: ask4skill-user-service
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      - mysql
    networks:
      - asknet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user.rule=PathPrefix(`/api/user`)"
      - "traefik.http.routers.user.entrypoints=web"
      - "traefik.http.services.user.loadbalancer.server.port=5000"

  coach-service:
    build: ../backend/coach-service
    container_name: ask4skill-coach-service
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      - mysql
    networks:
      - asknet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.coach.rule=PathPrefix(`/api/coach`)"
      - "traefik.http.routers.coach.entrypoints=web"
      - "traefik.http.services.coach.loadbalancer.server.port=5000"

  booking-service:
    build: ../backend/booking-service
    container_name: ask4skill-booking-service
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      - mysql
    networks:
      - asknet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.booking.rule=PathPrefix(`/api/booking`)"
      - "traefik.http.routers.booking.entrypoints=web"
      - "traefik.http.services.booking.loadbalancer.server.port=5000"

  chat-service:
    build: ../backend/chat-service
    container_name: ask4skill-chat-service
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      - mysql
    networks:
      - asknet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chat.rule=PathPrefix(`/api/chat`)"
      - "traefik.http.routers.chat.entrypoints=web"
      - "traefik.http.services.chat.loadbalancer.server.port=5000"

  payment-service:
    build: ../backend/payment-service
    container_name: ask4skill-payment-service
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      - mysql
    networks:
      - asknet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.payment.rule=PathPrefix(`/api/payment`)"
      - "traefik.http.routers.payment.entrypoints=web"
      - "traefik.http.services.payment.loadbalancer.server.port=5000"

  admin-service:
    build: ../backend/admin-service
    container_name: ask4skill-admin-service
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      - mysql
    networks:
      - asknet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.admin.rule=PathPrefix(`/api/admin`)"
      - "traefik.http.routers.admin.entrypoints=web"
      - "traefik.http.services.admin.loadbalancer.server.port=5000"

  notification-service:
    build: ../backend/notification-service
    container_name: ask4skill-notification-service
    environment:
      DATABASE_URL: ${DATABASE_URL}
      MAILDEV_HOST: maildev
      MAILDEV_PORT: ${MAILDEV_PORT}
    depends_on:
      - mysql
      - maildev
    networks:
      - asknet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.notification.rule=PathPrefix(`/api/notification`)"
      - "traefik.http.routers.notification.entrypoints=web"
      - "traefik.http.services.notification.loadbalancer.server.port=5000"

  portainer:
    image: portainer/portainer-ce:latest
    container_name: ask4skill-portainer
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - asknet

  traefik:
    image: traefik:v2.11
    container_name: ask4skill-traefik
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - asknet

networks:
  asknet:

volumes:
  mysql_data:
  portainer_data:
