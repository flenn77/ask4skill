version: "3.8"

services:

  # 1) Base de donnÃ©es + outils
  mysql:
    image: mysql:8.0
    container_name: ask4skill-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE:      ${DB_NAME}
      MYSQL_USER:          ${DB_USER}
      MYSQL_PASSWORD:      ${DB_PASSWORD}
      MYSQL_ROOT_HOST:     '%'
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD","mysqladmin","ping","-h","localhost","-P","${DB_PORT}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: ask4skill-phpmyadmin
    restart: always
    environment:
      PMA_HOST:     ${PMA_HOST}
      PMA_USER:     ${PMA_USER}
      PMA_PASSWORD: ${PMA_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - mysql

  maildev:
    image: maildev/maildev:latest
    container_name: ask4skill-maildev
    restart: always
    ports:
      - "1080:1080"
      - "1025:1025"

  # 2) Auth Service (avec migrations)
  auth-service:
    build:
      context: ../backend/auth-service
      dockerfile: Dockerfile
    container_name: ask4skill-auth-service
    ports:
      - "5000:5000"
    volumes:
      - ../backend/auth-service:/app
    env_file:
      - .env
    environment:
      DB_HOST:      ${DB_HOST}
      DB_PORT:      ${DB_PORT}
      DB_NAME:      ${DB_NAME}
      DB_USER:      ${DB_USER}
      DB_PASSWORD:  ${DB_PASSWORD}
      DATABASE_URL: mysql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
    depends_on:
      mysql:
        condition: service_healthy
    command: >
      sh -c "
        npx sequelize-cli db:migrate &&
        npm run dev
      "

  # 3) Autres services (sans migrations)
  user-service:
    build:
      context: ../backend/user-service
      dockerfile: Dockerfile
    container_name: ask4skill-user-service
    ports:
      - "5001:5000"
    volumes:
      - ../backend/user-service:/app
      - /app/node_modules
    env_file:
      - .env
    environment:
      DB_HOST:      ${DB_HOST}
      DB_PORT:      ${DB_PORT}
      DB_NAME:      ${DB_NAME}
      DB_USER:      ${DB_USER}
      DB_PASSWORD:  ${DB_PASSWORD}
      DATABASE_URL: mysql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
    depends_on:
      mysql:
        condition: service_healthy
    command: npm run dev

  coach-service:
    build:
      context: ../backend/coach-service
      dockerfile: Dockerfile
    container_name: ask4skill-coach-service
    ports:
      - "5002:5000"
    volumes:
      - ../backend/coach-service:/app
      - /app/node_modules
    env_file:
      - .env
    environment:
      DB_HOST:      ${DB_HOST}
      DB_PORT:      ${DB_PORT}
      DB_NAME:      ${DB_NAME}
      DB_USER:      ${DB_USER}
      DB_PASSWORD:  ${DB_PASSWORD}
      DATABASE_URL: mysql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
    depends_on:
      - mysql
    command: npm run dev

  booking-service:
    build:
      context: ../backend/booking-service
      dockerfile: Dockerfile
    container_name: ask4skill-booking-service
    ports:
      - "5003:5000"
    volumes:
      - ../backend/booking-service:/app
      - /app/node_modules
    env_file:
      - .env
    environment:
      DB_HOST:      ${DB_HOST}
      DB_PORT:      ${DB_PORT}
      DB_NAME:      ${DB_NAME}
      DB_USER:      ${DB_USER}
      DB_PASSWORD:  ${DB_PASSWORD}
      DATABASE_URL: mysql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
    depends_on:
      - mysql
    command: npm run dev

  chat-service:
    build:
      context: ../backend/chat-service
      dockerfile: Dockerfile
    container_name: ask4skill-chat-service
    ports:
      - "5004:5000"
    volumes:
      - ../backend/chat-service:/app
      - /app/node_modules
    env_file:
      - .env
    environment:
      DB_HOST:      ${DB_HOST}
      DB_PORT:      ${DB_PORT}
      DB_NAME:      ${DB_NAME}
      DB_USER:      ${DB_USER}
      DB_PASSWORD:  ${DB_PASSWORD}
      DATABASE_URL: mysql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
    depends_on:
      - mysql
    command: npm run dev

  payment-service:
    build:
      context: ../backend/payment-service
      dockerfile: Dockerfile
    container_name: ask4skill-payment-service
    ports:
      - "5005:5000"
    volumes:
      - ../backend/payment-service:/app
      - /app/node_modules
    env_file:
      - .env
    environment:
      DB_HOST:      ${DB_HOST}
      DB_PORT:      ${DB_PORT}
      DB_NAME:      ${DB_NAME}
      DB_USER:      ${DB_USER}
      DB_PASSWORD:  ${DB_PASSWORD}
      DATABASE_URL: mysql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
    depends_on:
      - mysql
    command: npm run dev

  admin-service:
    build:
      context: ../backend/admin-service
      dockerfile: Dockerfile
    container_name: ask4skill-admin-service
    ports:
      - "5006:5000"
    volumes:
      - ../backend/admin-service:/app
      - /app/node_modules
    env_file:
      - .env
    environment:
      DB_HOST:      ${DB_HOST}
      DB_PORT:      ${DB_PORT}
      DB_NAME:      ${DB_NAME}
      DB_USER:      ${DB_USER}
      DB_PASSWORD:  ${DB_PASSWORD}
      DATABASE_URL: mysql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
    depends_on:
      - mysql
    command: npm run dev

  notification-service:
    build:
      context: ../backend/notification-service
      dockerfile: Dockerfile
    container_name: ask4skill-notification-service
    ports:
      - "5007:5000"
    volumes:
      - ../backend/notification-service:/app
      - /app/node_modules
    env_file:
      - .env
    environment:
      DB_HOST:      ${DB_HOST}
      DB_PORT:      ${DB_PORT}
      DB_NAME:      ${DB_NAME}
      DB_USER:      ${DB_USER}
      DB_PASSWORD:  ${DB_PASSWORD}
      DATABASE_URL: mysql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
      MAILDEV_HOST: ${MAILDEV_HOST}
      MAILDEV_PORT: ${MAILDEV_PORT}
    depends_on:
      - mysql
      - maildev
    command: npm run dev

volumes:
  mysql_data:
